//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VehicleClient.VehicleIncService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Vehicle", Namespace="http://schemas.datacontract.org/2004/07/VehicleIncServiceLibrary")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VehicleClient.VehicleIncService.Car))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VehicleClient.VehicleIncService.Motorcycle))]
    public partial class Vehicle : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int motorPowerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int wheelsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int motorPower {
            get {
                return this.motorPowerField;
            }
            set {
                if ((this.motorPowerField.Equals(value) != true)) {
                    this.motorPowerField = value;
                    this.RaisePropertyChanged("motorPower");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int wheels {
            get {
                return this.wheelsField;
            }
            set {
                if ((this.wheelsField.Equals(value) != true)) {
                    this.wheelsField = value;
                    this.RaisePropertyChanged("wheels");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Car", Namespace="http://schemas.datacontract.org/2004/07/VehicleIncServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class Car : VehicleClient.VehicleIncService.Vehicle {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int nbrOfDoorsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Model {
            get {
                return this.ModelField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelField, value) != true)) {
                    this.ModelField = value;
                    this.RaisePropertyChanged("Model");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int nbrOfDoors {
            get {
                return this.nbrOfDoorsField;
            }
            set {
                if ((this.nbrOfDoorsField.Equals(value) != true)) {
                    this.nbrOfDoorsField = value;
                    this.RaisePropertyChanged("nbrOfDoors");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Motorcycle", Namespace="http://schemas.datacontract.org/2004/07/VehicleIncServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class Motorcycle : VehicleClient.VehicleIncService.Vehicle {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string typeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                if ((object.ReferenceEquals(this.typeField, value) != true)) {
                    this.typeField = value;
                    this.RaisePropertyChanged("type");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="VehicleIncService.IVehicleIncService")]
    public interface IVehicleIncService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicleIncService/ByMotorcycle", ReplyAction="http://tempuri.org/IVehicleIncService/ByMotorcycleResponse")]
        void ByMotorcycle(VehicleClient.VehicleIncService.Motorcycle motorcycle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicleIncService/ByMotorcycle", ReplyAction="http://tempuri.org/IVehicleIncService/ByMotorcycleResponse")]
        System.Threading.Tasks.Task ByMotorcycleAsync(VehicleClient.VehicleIncService.Motorcycle motorcycle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicleIncService/ByCar", ReplyAction="http://tempuri.org/IVehicleIncService/ByCarResponse")]
        void ByCar(VehicleClient.VehicleIncService.Car car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicleIncService/ByCar", ReplyAction="http://tempuri.org/IVehicleIncService/ByCarResponse")]
        System.Threading.Tasks.Task ByCarAsync(VehicleClient.VehicleIncService.Car car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicleIncService/GetCar", ReplyAction="http://tempuri.org/IVehicleIncService/GetCarResponse")]
        VehicleClient.VehicleIncService.Car[] GetCar();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicleIncService/GetCar", ReplyAction="http://tempuri.org/IVehicleIncService/GetCarResponse")]
        System.Threading.Tasks.Task<VehicleClient.VehicleIncService.Car[]> GetCarAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicleIncService/GetMotorcycles", ReplyAction="http://tempuri.org/IVehicleIncService/GetMotorcyclesResponse")]
        VehicleClient.VehicleIncService.Motorcycle[] GetMotorcycles();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicleIncService/GetMotorcycles", ReplyAction="http://tempuri.org/IVehicleIncService/GetMotorcyclesResponse")]
        System.Threading.Tasks.Task<VehicleClient.VehicleIncService.Motorcycle[]> GetMotorcyclesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicleIncService/SellCar", ReplyAction="http://tempuri.org/IVehicleIncService/SellCarResponse")]
        VehicleClient.VehicleIncService.Car SellCar(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicleIncService/SellCar", ReplyAction="http://tempuri.org/IVehicleIncService/SellCarResponse")]
        System.Threading.Tasks.Task<VehicleClient.VehicleIncService.Car> SellCarAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicleIncService/SellMotorcycle", ReplyAction="http://tempuri.org/IVehicleIncService/SellMotorcycleResponse")]
        VehicleClient.VehicleIncService.Motorcycle SellMotorcycle(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicleIncService/SellMotorcycle", ReplyAction="http://tempuri.org/IVehicleIncService/SellMotorcycleResponse")]
        System.Threading.Tasks.Task<VehicleClient.VehicleIncService.Motorcycle> SellMotorcycleAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IVehicleIncServiceChannel : VehicleClient.VehicleIncService.IVehicleIncService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VehicleIncServiceClient : System.ServiceModel.ClientBase<VehicleClient.VehicleIncService.IVehicleIncService>, VehicleClient.VehicleIncService.IVehicleIncService {
        
        public VehicleIncServiceClient() {
        }
        
        public VehicleIncServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public VehicleIncServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VehicleIncServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VehicleIncServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void ByMotorcycle(VehicleClient.VehicleIncService.Motorcycle motorcycle) {
            base.Channel.ByMotorcycle(motorcycle);
        }
        
        public System.Threading.Tasks.Task ByMotorcycleAsync(VehicleClient.VehicleIncService.Motorcycle motorcycle) {
            return base.Channel.ByMotorcycleAsync(motorcycle);
        }
        
        public void ByCar(VehicleClient.VehicleIncService.Car car) {
            base.Channel.ByCar(car);
        }
        
        public System.Threading.Tasks.Task ByCarAsync(VehicleClient.VehicleIncService.Car car) {
            return base.Channel.ByCarAsync(car);
        }
        
        public VehicleClient.VehicleIncService.Car[] GetCar() {
            return base.Channel.GetCar();
        }
        
        public System.Threading.Tasks.Task<VehicleClient.VehicleIncService.Car[]> GetCarAsync() {
            return base.Channel.GetCarAsync();
        }
        
        public VehicleClient.VehicleIncService.Motorcycle[] GetMotorcycles() {
            return base.Channel.GetMotorcycles();
        }
        
        public System.Threading.Tasks.Task<VehicleClient.VehicleIncService.Motorcycle[]> GetMotorcyclesAsync() {
            return base.Channel.GetMotorcyclesAsync();
        }
        
        public VehicleClient.VehicleIncService.Car SellCar(int id) {
            return base.Channel.SellCar(id);
        }
        
        public System.Threading.Tasks.Task<VehicleClient.VehicleIncService.Car> SellCarAsync(int id) {
            return base.Channel.SellCarAsync(id);
        }
        
        public VehicleClient.VehicleIncService.Motorcycle SellMotorcycle(int id) {
            return base.Channel.SellMotorcycle(id);
        }
        
        public System.Threading.Tasks.Task<VehicleClient.VehicleIncService.Motorcycle> SellMotorcycleAsync(int id) {
            return base.Channel.SellMotorcycleAsync(id);
        }
    }
}
